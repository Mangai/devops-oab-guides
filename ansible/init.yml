---
- name: Deploy Infra Components for DevOps with OpenShift and OpenShift Ansible Broker Workshop
  hosts: localhost
  gather_facts: false
  run_once: true
  vars:
    lab_infra_project: lab-infra
    user_gogs_admin: gogs
    user_gogs_test: test
    user_gogs_password: openshift
    labs_github_ref: master
    user_count: 10
    user_format: user%02d
    openshift_prod_master: ''
    openshift_prod_token: ''

  tasks:
    - include_role:
        name: openshift_common_facts
      tags: always

    - import_role:
        name: openshift_sonatype_nexus
      vars:
        project_name: "{{ lab_infra_project }}"
        nexus_image_version: 3.7.1
        nexus_max_memory: 6Gi
      tags: nexus

    - import_role:
        name: openshift_workshopper
      vars:
        project_name: "{{ lab_infra_project }}"
        workshopper_content_url_prefix: "https://raw.githubusercontent.com/openshift-labs/devops-oab-guides/master"
        workshopper_workshop_urls: "https://raw.githubusercontent.com/openshift-labs/devops-oab-guides/master/_devops-workshop.yml"
        workshopper_env_vars:
          PROJECT_SUFFIX: ""
          GOGS_URL: http://{{ gogs_hostname }}
          OPENSHIFT_DOCS_BASE: "https://docs.openshift.com/container-platform/3.7"
      tags: guides

    - set_fact:
        gogs_hostname: gogs-{{ lab_infra_project }}.{{ apps_hostname_suffix }}
      tags: gogs

    - import_role:
        name: openshift_gogs
      vars:
        project_name: "{{ lab_infra_project }}"
        project_display_name: "DevOps Workshop Infrastructure"
        project_desc: "DevOps Workshop Infrastructure"
        gogs_route: "{{ gogs_hostname }}"
        gogs_image_version: 0.11.34
        gogs_admin_user: "{{ user_gogs_admin }}"
        gogs_admin_password: "{{ user_gogs_password }}"
        gogs_user: "{{ user_gogs_test }}"
        gogs_password: "{{ user_gogs_password }}"
        clean_deploy: true
      tags: gogs

    # create user projects
    - name: set openshift dev master 
      set_fact:
        openshift_dev_master: {{ openshift_master }}
      when: >
        openshift_dev_master is not defined or
        openshift_dev_master is none or
        openshift_dev_master|trim() == ""

    - name: set openshift prod master
      set_fact:
        openshift_prod_master: {{ openshift_dev_master }}
      when: >
        openshift_prod_master is not defined or
        openshift_prod_master is none or
        openshift_prod_master|trim() == ""

    - name: create dev,stage and prod projects for {{ user_count }} users
      shell: |
        oc new-project dev-{{ item }}   --display-name="CoolStore DEV"
        oc new-project stage-{{ item }} --display-name="CoolStore STAGE"
        oc new-project cicd-{{ item }}  --display-name="CI/CD"
        oc new-project prod-{{ item }}  --display-name="CoolStore PROD" --server={{ openshift_prod_master }} --token={{ openshift_prod_token }}

        oc policy add-role-to-user admin {{ item }} -n dev-{{ item }}
        oc policy add-role-to-user admin {{ item }} -n stage-{{ item }}
        oc policy add-role-to-user admin {{ item }} -n cicd-{{ item }}
        oc policy add-role-to-user admin {{ item }} -n prod-{{ item }} --server={{ openshift_prod_master }} --token={{ openshift_prod_token }}

        oc adm policy add-role-to-group admin system:serviceaccounts:cicd-{{ item }} -n dev-{{ item }}
        oc adm policy add-role-to-group admin system:serviceaccounts:cicd-{{ item }} -n stage-{{ item }}
      with_sequence: start=0 end={{ user_count }} format="{{ user_format }}"
      when: user_count > 0

    - name: create dev,stage and prod projects
      shell: |
        oc new-project dev --display-name="CoolStore DEV"
        oc new-project stage --display-name="CoolStore STAGE"
        oc new-project cicd --display-name="CI/CD"
        oc new-project prod --display-name="CoolStore PROD" --server={{ openshift_prod_master }} --token={{ openshift_prod_token }}

        oc policy add-role-to-user admin {{ item }} -n dev
        oc policy add-role-to-user admin {{ item }} -n stage
        oc policy add-role-to-user admin {{ item }} -n cicd
        oc policy add-role-to-user admin {{ item }} -n prod --server={{ openshift_prod_master }} --token={{ openshift_prod_token }}

        oc adm policy add-role-to-group admin system:serviceaccounts:cicd -n dev
        oc adm policy add-role-to-group admin system:serviceaccounts:cicd -n stage
      when: user_count <= 0

    # setup git repos for test user
    - name: create projects git repo for {{ user_gogs_test }} user
      uri:
        url: http://{{ gogs_hostname }}/api/v1/user/repos
        method: POST
        body: '{"name": "{{ item }}", "private": false}'
        body_format: json
        user: "{{ user_gogs_test }}"
        password: "{{ user_gogs_password }}"
        status_code: 200,201
        force_basic_auth: true
        ignore_errors: true
      with_items:
        - catalog-spring-boot
        - web-nodejs
      tags: 
        - gogs
        - test

    - name: create temporary git directory
      tempfile:
        state: directory
        prefix: devops-oab-git
      register: git_dir
      tags: 
        - gogs
        - test

    - name: unarchive labs source archive
      unarchive:
        remote_src: yes
        src: "https://github.com/openshift-labs/devops-oab-labs/archive/{{ labs_github_ref }}.zip"
        dest: "{{ git_dir.path }}"
      tags: 
        - gogs
        - test

    - name: push to catalog-spring-boot git repo for user {{ user_gogs_test }}
      shell: |
        git init
        git add . --all
        git config user.email "rhdeveloper@labs.com"
        git config user.name "rhdeveloper"
        git commit -m "Initial add"
        git push -f http://{{ user_gogs_test }}:{{ user_gogs_password }}@{{ gogs_hostname }}/{{ user_gogs_test }}/catalog-spring-boot.git master
      args:
        chdir: "{{ git_dir.path }}/devops-oab-labs-{{ labs_github_ref }}/catalog-spring-boot"
      tags: 
        - gogs
        - test

    - name: push to web-nodejs git repo for user {{ user_gogs_test }}
      shell: |
        git init
        git add . --all
        git config user.email "rhdeveloper@labs.com"
        git config user.name "rhdeveloper"
        git commit -m "Initial add"
        git push -f http://{{ user_gogs_test }}:{{ user_gogs_password }}@{{ gogs_hostname }}/{{ user_gogs_test }}/web-nodejs.git master
      args:
        chdir: "{{ git_dir.path }}/devops-oab-labs-{{ labs_github_ref }}/web-nodejs"
      tags: 
        - gogs
        - test
