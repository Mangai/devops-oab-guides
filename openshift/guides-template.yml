apiVersion: v1
kind: Template
metadata:
  name: devops-guides
parameters:
- displayName: Application Name
  name: APPLICATION_NAME
  required: true
  value: guides-devops
- displayName: Workshopper Image Version
  name: WORKSHOPPER_VERSION
  required: true
  value: latest
- displayName: Content Git Ref
  name: GIT_REF
  required: true
  value: master
- displayName: OpenShift Master
  name: OPENSHIFT_MASTER
  required: true
- displayName: OpenShift Accounts Format
  name: USER_FORMAT
  required: true
  value: userXX
- displayName: OpenShift Accounts Password
  name: USER_PASSWORDS
  required: true
  value: "[PROVIDED BY INSTRUCTOR]"
- displayName: User Project Suffix
  name: PROJECT_SUFFIX
  required: true
  value: XX
- displayName: Gogs Git Server
  name: GOGS_SERVER
  required: true
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: CONTENT_URL_PREFIX
            value: https://raw.githubusercontent.com/openshift-labs/devops-guides/${GIT_REF}
          - name: WORKSHOPS_URLS
            value: file:///app/config/guides-devops.yml
          - name: CACHE_PRELOAD
            value: "true"
          image: workshopper
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config
            name: config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: guides-devops.yml
              path: guides-devops.yml
            name: ${APPLICATION_NAME}
          name: config
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: workshopper:${WORKSHOPPER_VERSION}
      type: ImageChange
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: workshopper
  spec:
    dockerImageRepository: docker.io/osevg/workshopper
    tags:
    - name: "${WORKSHOPPER_VERSION}"
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    name: ${APPLICATION_NAME}
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  data:
    guides-devops.yml: |-
      id: "devops"
      name: "DevOps Workshop with OpenShift"
      
      vars:
        OPENSHIFT_URL: "${OPENSHIFT_MASTER}"
        OPENSHIFT_USER: "${USER_FORMAT}"
        OPENSHIFT_PASSWORD: "${USER_PASSWORDS}"
        OPENSHIFT_DOCS_BASE: "https://docs.openshift.com/container-platform/3.7"
        NEXUS_URL: "http://nexus.lab-infra.svc:8081/content/groups/public/"
        GIT_SERVER_URL: "${GOGS_SERVER}"
        GIT_SERVER_INTERNAL_URL: "http://gogs.lab-infra.svc:3000"
        GIT_SERVER_TYPE: "gogs"
        GIT_USER: "userXX"
        GIT_PASSWORD: "openshift3"
        PROJECT_SUFFIX: "${PROJECT_SUFFIX}"
        CART_ROUTE: "CART-ROUTE"
        CART_BLUE_ROUTE: "CART-BLUE-ROUTE"
        CART_GREEN_ROUTE: "CART-GREEN-ROUTE"

      modules:
        activate:
        - devops-intro
        - devops-explore-openshift
        - devops-deployment-envs
        - devops-simple-pipeline
        - devops-pipeline-scm
        - devops-promotion
        - devops-webhook
        - devops-zerodowntime-manual
        - devops-zerodowntime-automated
        - devops-deploy-jenkins
        - devops-custom-slave
  kind: ConfigMap
  metadata:
    name: ${APPLICATION_NAME}